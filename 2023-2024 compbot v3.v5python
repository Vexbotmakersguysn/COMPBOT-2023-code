{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nmBottomLeft = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)\nmBottomRight = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nmTopLeft = Motor(Ports.PORT8, GearSetting.RATIO_18_1, False)\nmTopRight = Motor(Ports.PORT7, GearSetting.RATIO_18_1, True)\ncontroller_1 = Controller(PRIMARY)\nGyroscope = Inertial(Ports.PORT19)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:\n#\tAuthor:\n#\tCreated:\n#\tConfiguration:\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\ndef pre_autonomous():\n    # actions to do when the program starts\n    brain.screen.clear_screen()\n    brain.screen.print(\"pre auton code\")\n    wait(1, SECONDS)\n\ndef autonomous():\n    brain.screen.clear_screen()\n    brain.screen.print(\"autonomous code\")\n    # place automonous code here\n    def RightSide():\n        mBottomLeft.set_velocity(100, PERCENT)\n        mBottomRight.set_velocity(100,PERCENT)\n        mTopLeft.set_velocity(100, PERCENT)\n        mTopRight.set_velocity(100, PERCENT)\n        mBottomLeft.set_stopping(BRAKE)\n        mBottomRight.set_stopping(BRAKE)\n        mTopLeft.set_stopping(BRAKE)\n        mTopRight.set_stopping(BRAKE)\n        Gyroscope.set_heading(1, DEGREES)\n        \n\n\n    RightSide()\n        \n\ndef user_control():\n    brain.screen.clear_screen()\n    # place driver control in this while loop\n    while True:\n        mBottomLeft.set_stopping(HOLD)\n        mBottomRight.set_stopping(HOLD)\n        mTopLeft.set_stopping(HOLD)\n        mTopRight.set_stopping(HOLD)\n        mBottomLeft.set_velocity(controller_1.axis3.position()-controller_1.axis4.position()-controller_1.axis1.position(),PERCENT)\n        mBottomRight.set_velocity(controller_1.axis3.position()+controller_1.axis4.position()-controller_1.axis1.position(),PERCENT)\n        mTopLeft.set_velocity(controller_1.axis3.position()+controller_1.axis4.position()+controller_1.axis1.position(),PERCENT)\n        mTopRight.set_velocity(controller_1.axis3.position()-controller_1.axis4.position()+controller_1.axis1.position(),PERCENT)\n        mBottomLeft.spin(FORWARD);\n        mBottomRight.spin(FORWARD);\n        mTopLeft.spin(FORWARD)\n        mTopRight.spin(FORWARD)\n\n# create competition instance\ncomp = Competition(user_control, autonomous)\npre_autonomous()\n","textLanguage":"python","rconfig":[{"port":[10],"name":"mBottomLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[9],"name":"mBottomRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[8],"name":"mTopLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[7],"name":"mTopRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[19],"name":"Gyroscope","customName":true,"deviceType":"Inertial","deviceClass":"inertial","setting":{"id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}